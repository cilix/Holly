let Person = fn name, age {
  return { 
    name: name,
    age: age,
    speak: fn self {
      print('Hello, my name is ' + self.name)
    }
  }
}

-- or, sugar for functions returning a single expression
let Person = fn name, age -> 
  { name: name, age: age, 
    speak: fn self -> 
      print('hello, my name is ' + self.name) }

let bob = Person('bob')

bob.speak(bob)

let add = fn x, y -> x + y

let a = add(2)

hl_pname s, v {
  let i = 0
  let b = nil
  while 
    hl_isalpha(v[i]) or 
    hl_isdigit(v[i]) or
    v[i] == '_' {
    i += 1
  }
  if i > 20
    return ""
  return slice(v)
}
