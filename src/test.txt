let h = 5 + (2 / 3) + 6 * 9

log h

if 1 {
  log h + 2
} else if 0 {
  log "this is false"
} else if 0 {
  log "fuck"
} else {
  log "you"
}

if 1 - 1
  log "please log"
else if 0 log "please dont"
else { 
  if 0 log "yes" else log "no"
}

log "um, hello, world!!!!!!!"
log false

/-
let Person = fn name, age {
  return { 
    name: name,
    age: age,
    speak: fn self {
      print('Hello, my name is ' + self:name)
    }
  }
}

-- or, sugar for functions returning a single expression
let Person = fn name, age -> 
  { name: name, age: age, 
    speak: fn self -> 
      print('hello, my name is ' + self:name) }

let bob = Person('bob', 25)

bob:speak(bob) -- stupid

let add = fn x, y -> x + y

let a = add(2, 3)

-- parsing a variable from a string (translated from c)
let name = fn v {
  let i = 0
  while isalpha(v[i]) or 
        isdigit(v[i]) or 
        v[i] == '_'
    i += 1
  if i == 0 return ""
  return slice(v, i)
}

value.hello().world().function().composition()
-/